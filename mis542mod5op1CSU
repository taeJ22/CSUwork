#code used for Python Data Analysis with Jupyter Notebook/pandas for MIS 542 04/24/2021 mod 6 op 1 for CSU global 

#import sample of titanic data
df = pd.read_csv("MIS542titanic (1).csv")
df.head()
#view first class results 
df_class1 = df["Passanger Class"] == 1
df[df_class1]

#Add column of Brit pounds to USD dollar
df_fare_count = df["Passanger Class"] == 1
df_usd_class = df["Fare in British Pounds"] *1.28
df[df_fare_count & df_usd_class]

#average value of first class ticket (USD) and median sorted by survial status 
means = df.groupby("Passanger Class").mean()
print(means)
median = df.groupby("Survived").median()
print(median)

#chart showing survial by gender 
import matplotlib
import matplotlib.pyplot as plt
import matplotlib.ticker as mticker
import matplotlib.dates as mdates
import numpy as np


table = pd.crosstab(df['Survived'],df['Sex'])
print (table)
print (df.groupby('Sex').Survived.mean())

survivors_data = df[df.Survived==1]
non_survivors_data = df[df.Survived==0]

# calculate values for each survival status
survivors_gender = survivors_data.groupby(['Sex']).size().values
non_survivors_gender = non_survivors_data.groupby(['Sex']).size().values

ax1 = plt.subplot2grid((40,40), (0,0), rowspan=40, colspan=40)

gender_categories = ['female', 'male']

# plot chart for count of survivors by class
ax1.bar(range(len(survivors_gender)), survivors_gender, label='Survivors', alpha=0.5, color='g')
ax1.bar(range(len(non_survivors_gender)), non_survivors_gender, bottom=survivors_gender, label='Non-Survivors', alpha=0.5, color='r')
plt.sca(ax1)
plt.xticks([0.4, 1.4], gender_categories )
ax1.set_ylabel("Count")
ax1.set_xlabel("")
ax1.set_title("Count of survivors by gender",fontsize=14)
plt.legend(loc='upper left')

#age bins 
age_labels = ['0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70-79']
df['Age'] = pd.cut(df.Age, range(0, 81, 10), right=False, labels=age_labels)
print(age_labels)

#passanger class count 
import numpy as np
import matplotlib.pyplot as plt

df.groupby(['Passanger Class']).size().plot(kind='bar',stacked=False, color=['black', 'red', 'green'])
plt.title("Passanger Class",fontsize=25)
plt.ylabel('Total Passanger')
plt.xlabel('Class');

#Pie charts
df['Sex'].value_counts().plot(kind='pie')
df.groupby('Sex').size().plot(kind='pie', autopct='%.2f')
df.groupby('Survived').size().plot(kind='pie', autopct='%.2f')
plt.title('Percentage of passangers Survived (1)')
plt.axis('equal')

#chart showing age group (bin) by gender 
male_data = df[df.Sex == "male"].groupby('age_group').Survived.mean().values
female_data = df[df.Sex == "female"].groupby('age_group').Survived.mean().values
ax = plt.subplot()
male_plt_position = np.array(range(len(age_labels)))
female_plt_position = np.array(range(len(age_labels)))+0.4
ax.bar(male_plt_position, male_data,width=0.4,label='Male',color='b')
ax.bar(female_plt_position, female_data,width=0.4,label='Female',color='r')
plt.xticks(tick_spacing,  age_labels)
ax.set_ylabel("Proportion")
ax.set_xlabel("Age Group")
ax.set_title("Proportion of survivors by age group / Gender",fontsize=14)
plt.legend(loc='best')
plt.show()
