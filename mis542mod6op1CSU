# following the tutorial as posted here https://realpython.com/pandas-plot-python/#set-up-your-environment
# code used for Python Data Analysis with Jupyter Notebook/pandas for MIS 542 04/24/2021 mod 6 op 1 for CSU global 
 
  import pandas as pd
download_url = ( 
    "https://raw.githubusercontent.com/fivethirtyeight/" 
    "data/master/college-majors/recent-grads.csv
    )
    
#review import    
df = pd.read_csv(download_url)
type(df)
pd.set_option("display.max.columns", None)
df.head()

#create line plots 
%matplotlib
%matplotlib inline
df.plot(x="Rank", y=["P25th", "Median", "P75th"])
import matplotlib.pyplot as plt
plt.plot(df["Rank"], df["P75th"])

#can duplciate with dataframe.plot instead of plt.plot = if you already have a DataFrame instance, then df.plot() offers cleaner syntax than pyplot.plot().
df.plot(x="Rank", y="P75th") 

# acknowledge & plot outliers 
top_5 = df.sort_values(by="Median", ascending=False).head()
top_5.plot(x="Major", y="Median", kind="bar", rot=5, fontsize=4)

#semgenting results 
top_medians = df[df["Median"] > 60000].sort_values("Median")
top_medians.plot(x="Major", y=["P25th", "Median", "P75th"], kind="bar")

#check for correlation 
df.plot(x="Median", y="Unemployment_rate", kind="scatter")

#reviewing ratios
small_cat_totals = cat_totals[cat_totals < 100_000]
big_cat_totals = cat_totals[cat_totals > 100_000]
# Adding a new item "Other" with the sum of the small categories
small_sums = pd.Series([small_cat_totals.sum()], index=["Other"])
big_cat_totals = big_cat_totals.append(small_sums)
big_cat_totals.plot(kind="pie", label="")

# Create a histogram plot showing the distribution of the median earnings for the engineering majors (comparable to the first bar graphs we did) 
df[df["Major_category"] == "Engineering"]["Median"].plot(kind="hist")
